/**
 * @packageDocumentation
 * @module api.functional.auth.sign_out
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "nestia-fetcher";
import type { IConnection } from "nestia-fetcher";

import type { IResponse } from "./../../../../../src/api/common/interface/response.interface";

/**
 * 로그아웃 API
 * 사용자 쿠키에 있는 토큰을 제거한다.
 * 추후에 별도의 인증서버를 연동할 경우, 해당 인증서버에 로그아웃 요청을 보낸다.
 * 
 * @tag auth
 * 
 * @controller AuthController.signOut()
 * @path GET /auth/sign-out
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function signOut
    (
        connection: IConnection
    ): Promise<signOut.Output>
{
    return Fetcher.fetch
    (
        connection,
        signOut.ENCRYPTED,
        signOut.METHOD,
        signOut.path()
    );
}
export namespace signOut
{
    export type Output = IResponse;

    export const METHOD = "GET" as const;
    export const PATH: string = "/auth/sign-out";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/auth/sign-out`;
    }
}