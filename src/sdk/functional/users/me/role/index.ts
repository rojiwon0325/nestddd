/**
 * @packageDocumentation
 * @module api.functional.users.me.role
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";
import typia from "typia";

import type { IUserController } from "./../../../../../interface/user/presentation/index";

/**
 * 내 권한 수정 API
 * 
 * @tag users
 * @param connection connection Information of the remote HTTP(s) server with headers (+encryption password)
 * @param body 변경할 권한 정보를 포함
 * @returns 아무것도 반환하지 않습니다.
 * @throw 401 로그인이 필요합니다.
 * 
 * @controller UserController.setRole()
 * @path PATCH /users/me/role
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function setRole
    (
        connection: IConnection,
        body: IUserController.SetRoleBody
    ): Promise<void>
{
    return Fetcher.fetch
    (
        connection,
        setRole.ENCRYPTED,
        setRole.METHOD,
        setRole.path(),
        body,
        setRole.stringify
    );
}
export namespace setRole
{
    export type Input = IUserController.SetRoleBody;

    export const METHOD = "PATCH" as const;
    export const PATH: string = "/users/me/role";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/users/me/role`;
    }
    export const stringify = typia.createAssertStringify<Input>();
}